// This file is generated by Firebase Genkit.
'use server';
/**
 * @fileOverview This file contains a Genkit flow that generates reflection prompts based on user's recent journal entries.
 *
 * - generateReflectionPrompts - A function that generates reflection prompts.
 * - GenerateReflectionPromptsInput - The input type for the generateReflectionPrompts function.
 * - GenerateReflectionPromptsOutput - The return type for the generateReflectionPrompts function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateReflectionPromptsInputSchema = z.object({
  journalEntries: z.array(z.string()).describe('An array of recent journal entries.'),
});

export type GenerateReflectionPromptsInput = z.infer<typeof GenerateReflectionPromptsInputSchema>;

const GenerateReflectionPromptsOutputSchema = z.object({
  reflectionPrompts: z.array(z.string()).describe('An array of reflection prompts based on the journal entries.'),
});

export type GenerateReflectionPromptsOutput = z.infer<typeof GenerateReflectionPromptsOutputSchema>;

export async function generateReflectionPrompts(input: GenerateReflectionPromptsInput): Promise<GenerateReflectionPromptsOutput> {
  return generateReflectionPromptsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateReflectionPromptsPrompt',
  input: {schema: GenerateReflectionPromptsInputSchema},
  output: {schema: GenerateReflectionPromptsOutputSchema},
  prompt: `Based on the following journal entries, suggest some reflection prompts to help the user explore their thoughts and feelings more deeply. Return the prompts as a JSON array of strings.\n\nJournal Entries:\n{{#each journalEntries}}- {{{this}}}\n{{/each}}\n\nReflection Prompts:`, // Ensure output is a JSON array of strings
});

const generateReflectionPromptsFlow = ai.defineFlow(
  {
    name: 'generateReflectionPromptsFlow',
    inputSchema: GenerateReflectionPromptsInputSchema,
    outputSchema: GenerateReflectionPromptsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
