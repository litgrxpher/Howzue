// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview This file contains a Genkit flow that classifies the intent of a journal entry.
 *
 * - classifyEntryIntent - A function that classifies the intent of a journal entry.
 * - ClassifyEntryIntentInput - The input type for the classifyEntryIntent function.
 * - ClassifyEntryIntentOutput - The return type for the classifyEntryIntent function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ClassifyEntryIntentInputSchema = z.object({
  journalEntry: z.string().describe('The journal entry to classify.'),
});

export type ClassifyEntryIntentInput = z.infer<typeof ClassifyEntryIntentInputSchema>;

const ClassifyEntryIntentOutputSchema = z.object({
  intent: z.enum(['emotional', 'reflective', 'other']).describe('The intent of the journal entry.'),
});

export type ClassifyEntryIntentOutput = z.infer<typeof ClassifyEntryIntentOutputSchema>;

export async function classifyEntryIntent(input: ClassifyEntryIntentInput): Promise<ClassifyEntryIntentOutput> {
  return classifyEntryIntentFlow(input);
}

const prompt = ai.definePrompt({
  name: 'classifyEntryIntentPrompt',
  input: {schema: ClassifyEntryIntentInputSchema},
  output: {schema: ClassifyEntryIntentOutputSchema},
  prompt: `Classify the intent of the following journal entry as either "emotional", "reflective", or "other".\n\nJournal Entry:\n{{{journalEntry}}}\n\nIntent:`, // Ensure the output is one of the specified enum values
});

const classifyEntryIntentFlow = ai.defineFlow(
  {
    name: 'classifyEntryIntentFlow',
    inputSchema: ClassifyEntryIntentInputSchema,
    outputSchema: ClassifyEntryIntentOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
